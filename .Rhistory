a <- df[,name]
p <- ggplot(df,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
par(mfrow = c(5, 6))
df$cgrad <- as.character(df$graduated)
df$gpa = df$gpa/100.0
for (name in colnames(df)[1:25]) {
a <- df[,name]
p <- ggplot(df,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
par(mfrow = c(5, 6))
df$cgrad <- as.character(df$graduated)
df$gpa = df$gpa/100.0
for (name in colnames(df)[1:25]) {
a <- df[,name]
p <- ggplot(df,aes(x=a))
p1 <- p + geom_histogram(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
knitr::opts_chunk$set(echo =FALSE, message=FALSE, warning=FALSE)
require(lubridate)
require(dplyr)
#require(plyr)
require(ggplot2)
require(gridExtra) #For creating multiple plots together
library(alr3)
library(energy)
require(caret)
library(gdata)
require(RColorBrewer)
require(tibble)
require(xgboost)
df_orig <- read.csv("graduates.csv")
n1=nrow(df_orig)
n2=ncol(df_orig)
df <- df_orig
#What are the variables in the data
#I use column numbers (in no particular preference) as opposed to
#variable names at this point. This is just to have a first glimpse of
#the data. I choose and explain the variables for the analysis later.
colnames(df)
glimpse(df)
na_count <-sapply(df, function(y) sum(length(which(is.na(y)))))
nacount <- as.data.frame(na_count)
nacount <- cbind(rownames(nacount), nacount)
rownames(nacount) <- NULL
colnames(nacount)[1] <- "Variable"
nacount <- nacount[order(na_count),]
nacount
names = subset(nacount,na_count>=100)
mynames = names[,'Variable']
df[,c(mynames)] <- list(NULL)
#print("removed",names)
glimpse(df)
par(mfrow = c(5, 5))
df$cgrad <- as.character(df$graduated)
for (name in colnames(df)[1:25]) {
a <- df[,name]
p <- ggplot(df,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
# Working on this:
dummy(df$professor)
par(mfrow = c(5, 5))
df$cgrad <- as.character(df$graduated)
for (name in colnames(df)[1:25]) {
a <- df[,name]
p <- ggplot(df,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
df <- df[,sapply(df,is.factor) | sapply(df,is.double)]
par(mfrow = c(5, 5))
df$cgrad <- as.character(df$graduated)
require(lubridate)
require(dplyr)
#require(plyr)
require(ggplot2)
require(gridExtra) #For creating multiple plots together
library(alr3)
library(energy)
require(caret)
library(gdata)
require(RColorBrewer)
require(tibble)
require(xgboost)
require(lubridate)
require(dplyr)
#require(plyr)
require(ggplot2)
require(gridExtra) #For creating multiple plots together
library(alr3)
library(energy)
require(caret)
library(gdata)
require(RColorBrewer)
require(tibble)
require(xgboost)
require(lubridate)
require(dplyr)
#require(plyr)
require(ggplot2)
require(gridExtra) #For creating multiple plots together
library(alr3)
library(energy)
require(caret)
library(gdata)
require(RColorBrewer)
require(tibble)
require(xgboost)
df_orig <- read.csv("graduates.csv")
df_orig <- read.csv("graduates.csv")
df_orig <- read.csv("graduates.csv")
n1=nrow(df_orig)
n2=ncol(df_orig)
n1=nrow(df_orig)
n2=ncol(df_orig)
n1=nrow(df_orig)
n2=ncol(df_orig)
df <- df_orig
#What are the variables in the data
#I use column numbers (in no particular preference) as opposed to
#variable names at this point. This is just to have a first glimpse of
#the data. I choose and explain the variables for the analysis later.
colnames(df)
glimpse(df)
na_count <-sapply(df, function(y) sum(length(which(is.na(y)))))
nacount <- as.data.frame(na_count)
nacount <- cbind(rownames(nacount), nacount)
rownames(nacount) <- NULL
colnames(nacount)[1] <- "Variable"
nacount <- nacount[order(na_count),]
nacount
names = subset(nacount,na_count>=100)
mynames = names[,'Variable']
df[,c(mynames)] <- list(NULL)
#print("removed",names)
glimpse(df)
par(mfrow = c(5, 5))
df$cgrad <- as.character(df$graduated)
df <- df[,sapply(df,is.factor) | sapply(df,is.double)]
for (name in colnames(df)[1:25]) {
a <- df[,name]
p <- ggplot(df,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
df_orig <- read.csv("graduates.csv")
df_orig <- read.csv("graduates.csv")
df_orig <- read.csv("graduates.csv")
n1=nrow(df_orig)
n2=ncol(df_orig)
df <- df_orig
#What are the variables in the data
#I use column numbers (in no particular preference) as opposed to
#variable names at this point. This is just to have a first glimpse of
#the data. I choose and explain the variables for the analysis later.
colnames(df)
glimpse(df)
na_count <-sapply(df, function(y) sum(length(which(is.na(y)))))
nacount <- as.data.frame(na_count)
nacount <- cbind(rownames(nacount), nacount)
rownames(nacount) <- NULL
colnames(nacount)[1] <- "Variable"
nacount <- nacount[order(na_count),]
nacount
names = subset(nacount,na_count>=100)
mynames = names[,'Variable']
df[,c(mynames)] <- list(NULL)
#print("removed",names)
glimpse(df)
par(mfrow = c(5, 5))
dfn <- df[,sapply(df,is.factor) | sapply(df,is.double)]
dfn$cgrad <- as.character(dfn$graduated)
par(mfrow = c(5, 5))
dfn <- df[,sapply(df,is.factor) | sapply(df,is.double)]
dfn$cgrad <- as.character(dfn$graduated)
df_orig <- read.csv("graduates.csv")
df_orig <- read.csv("graduates.csv")
n1=nrow(df_orig)
n2=ncol(df_orig)
df <- df_orig
#What are the variables in the data
#I use column numbers (in no particular preference) as opposed to
#variable names at this point. This is just to have a first glimpse of
#the data. I choose and explain the variables for the analysis later.
colnames(df)
glimpse(df)
na_count <-sapply(df, function(y) sum(length(which(is.na(y)))))
nacount <- as.data.frame(na_count)
nacount <- cbind(rownames(nacount), nacount)
rownames(nacount) <- NULL
colnames(nacount)[1] <- "Variable"
nacount <- nacount[order(na_count),]
nacount
names = subset(nacount,na_count>=100)
mynames = names[,'Variable']
df[,c(mynames)] <- list(NULL)
#print("removed",names)
glimpse(df)
par(mfrow = c(5, 5))
dfn$cgrad <- as.character(dfn$graduated)
par(mfrow = c(5, 5))
dfn$cgrad <- as.character(df$graduated)
for (name in colnames(dfn)[1:25]) {
a <- dfn[,name]
p <- ggplot(dfn,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
require(lubridate)
require(dplyr)
#require(plyr)
require(ggplot2)
require(gridExtra) #For creating multiple plots together
library(alr3)
library(energy)
require(caret)
library(gdata)
require(RColorBrewer)
require(tibble)
require(xgboost)
df_orig <- read.csv("graduates.csv")
n1=nrow(df_orig)
n2=ncol(df_orig)
df <- df_orig
#What are the variables in the data
#I use column numbers (in no particular preference) as opposed to
#variable names at this point. This is just to have a first glimpse of
#the data. I choose and explain the variables for the analysis later.
colnames(df)
glimpse(df)
na_count <-sapply(df, function(y) sum(length(which(is.na(y)))))
nacount <- as.data.frame(na_count)
nacount <- cbind(rownames(nacount), nacount)
rownames(nacount) <- NULL
colnames(nacount)[1] <- "Variable"
nacount <- nacount[order(na_count),]
nacount
names = subset(nacount,na_count>=100)
mynames = names[,'Variable']
df[,c(mynames)] <- list(NULL)
#print("removed",names)
glimpse(df)
par(mfrow = c(5, 5))
df$cgrad <- as.character(df$graduated)
for (name in colnames(dfn)[1:25]) {
a <- dfn[,name]
p <- ggplot(dfn,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
par(mfrow = c(5, 5))
df$cgrad <- as.character(df$graduated)
for (name in colnames(df)[1:25]) {
a <- df[,name]
p <- ggplot(dfn,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
par(mfrow = c(5, 5))
df$cgrad <- as.character(df$graduated)
for (name in colnames(df)[1:33]) {
a <- df[,name]
p <- ggplot(dfn,aes(x=a))
p1 <- p + geom_density(aes(fill=cgrad),alpha=0.5) + theme(axis.text.x=element_text(angle=80,vjust=0.5))+xlab(name)
print(p1)
}
p <- ggplot(df,aes(x = professor))
p + geom_bar(position = "dodge",aes(fill = professor,
y = (..count..)/sum(..count..)))+
ggtitle("Professor")+
scale_fill_brewer(palette="Spectral")+
theme(plot.title = element_text(hjust = 0.5))
p + geom_bar(aes(y =..prop..,group = professor,fill = professor),
position = "dodge") + scale_fill_brewer(palette="Spectral")
p <- ggplot(df,aes(x = professor))
p + geom_bar(position = "dodge",aes(fill = cgrad,
y = (..count..)/sum(..count..)))+
ggtitle("Professor")+
scale_fill_brewer(palette="Spectral")+
theme(plot.title = element_text(hjust = 0.5))
p <- ggplot(df,aes(x = professor))
p + geom_bar(position = "dodge",aes(fill = cgrad,
y = (..count..)/sum(..count..)))+
ggtitle("Professor")+
scale_fill_brewer(palette="rainbow")+
theme(plot.title = element_text(hjust = 0.5))
p <- ggplot(df,aes(x = professor))
p + geom_bar(position = "dodge",aes(fill = cgrad,
y = (..count..)/sum(..count..)))+
ggtitle("Professor")+
theme(plot.title = element_text(hjust = 0.5))
p <- ggplot(df,aes(x = professor))
p + geom_bar(position = "dodge",aes(fill = cgrad,
y =..prop..,group = cgrad))+
ggtitle("Professor")+
theme(plot.title = element_text(hjust = 0.5))
myvec <- c(2,3,4)
myvec
version
libraries
? ggplot2
?? ggplot2
install.packages(ggplot2)
install.packages("ggplot2")
library("ggplot2")
getwd()
setwd("GitHub/Beginning-Data-Visualization-with-ggplot2-and-R/")
require("ggplot2")
require("tibble")
#Basic commands in R
#Set working directory to wherever you have your data
setwd(".")
#Check working directory
getwd()
#Load a data file - Read the Humidity Data
df_hum <- read.csv("data/historical-hourly-weather-data/humidity.csv")
#Display the summary
str(df_hum)
#Display the column names
colnames(df_hum)
#Number of columns and rows
dim(df_hum)
#Data and variable investigation
data()
str(Titanic)
str(mtcars)
str(airquality)
str(rocks)
str(sleep)
#First plot
hist(df_hum$Vancouver)
qplot(df_hum$Vancouver)
#Read weather description data
df_desc <- read.csv("data/historical-hourly-weather-data/weather_description.csv")
str(df_hum)
str(df_desc)
#SubTopic : Create one and two-dimensional objects
#Histogram using ggplot
ggplot(df_hum,aes(x=Vancouver))+geom_histogram()
#Activity B : Create a histogram for Temperature data
df_t <- read.csv("data/historical-hourly-weather-data/temperature.csv")
hist(df_t$Vancouver)
qplot(df_t$Vancouver)
ggplot(df_t,aes(x=Vancouver))+geom_histogram()
ggplot(df_t,aes(x=Seattle))+geom_histogram()
#Barchart
glimpse(df_desc)
ggplot(df_desc,aes(x=Vancouver)) + geom_bar()
#Exercise: Create a barchart
ggplot(df_desc,aes(x=Seattle)) + geom_bar()
#Create a boxplot
#Get the months from the datetime variable and create a month column.
df_hum$datetime <- as.character(df_hum$datetime)
df_hum$month <- substr(df_hum$datetime,6,7)
#Instructor Display
ggplot(df_hum,aes(x=month,y=Vancouver)) + geom_boxplot()
#Exercise - Create a boxplot
ggplot(df_hum,aes(x=month,y=Seattle)) + geom_boxplot()
ggplot(df_hum,aes(x=month,y=San.Francisco)) + geom_boxplot()
#Scatterplot
a=3.4
v0=27
#Generate some random time numbers
time <- runif(50, min=0, max=200)
distance <- sapply(time, function(x) v0*x + 0.5*a*x^2)
df <- data.frame(time,distance)
ggplot(df,aes(x=time,y=distance)) + geom_point()
ggplot(df,aes(x=time,y=distance)) + geom_line()
#Exercise - Create a Linechart
#df_hum$monthn <- as.numeric(df_hum$month)
df_hum$monthn <- df_hum$month
gp1 <- group_by(df_hum,monthn)
gp1 <- na.omit(gp1)
dfgp1 <- dplyr::summarise(gp1,med = median(Vancouver),
mean=mean(Vancouver),sd=sd(Vancouver),n=n())
ggplot(data = dfgp1, aes(x=monthn,y=mean)) + geom_line() + xlab("Month") +
ylab("Mean Humidity")
require("ggplot2")
require("tibble")
require("dplyr")
df_hum$monthn <- df_hum$month
gp1 <- group_by(df_hum,monthn)
gp1 <- na.omit(gp1)
dfgp1 <- dplyr::summarise(gp1,med = median(Vancouver),
mean=mean(Vancouver),sd=sd(Vancouver),n=n())
ggplot(data = dfgp1, aes(x=monthn,y=mean)) + geom_line() + xlab("Month") +
ylab("Mean Humidity")
df_hum$monthn <- as.numeric(df_hum$month)
#df_hum$monthn <- df_hum$month
gp1 <- group_by(df_hum,monthn)
gp1 <- na.omit(gp1)
dfgp1 <- dplyr::summarise(gp1,med = median(Vancouver),
mean=mean(Vancouver),sd=sd(Vancouver),n=n())
ggplot(data = dfgp1, aes(x=monthn,y=mean)) + geom_line() + xlab("Month") +
ylab("Mean Humidity")
#Activity C - Dataset
df_edu <- read.csv("data/xAPI-Edu-Data.csv")
str(df_edu)
#Functions for Plotting a barchart/Histogram
plotbar <- function(df,mytxt) {
ggplot(df,aes_string(x=mytxt)) + geom_bar()
}
plothist <- function(df,mytxt) {
ggplot(df,aes_string(x=mytxt)) + geom_histogram()
}
#Alternatively one can use a function to plot but students can just
#do it directly at this point.
#1-D Plots
plotbar(df_edu,"Topic")
plotbar(df_edu,"gender")
plotbar(df_edu,"ParentschoolSatisfaction")
plothist(df_edu,"VisITedResources")
#2-D Plots
ggplot(df_edu,aes(x=Topic,y=VisITedResources)) + geom_boxplot()
ggplot(df_edu,aes(x=AnnouncementsView,y=VisITedResources)) + geom_point()
ggplot(df_edu,aes(x=gender,y=Discussion)) + geom_boxplot()
#Grammar of Graphics (Changing the defaults using layered structure)
#Rebinning
ggplot(df_hum,aes(x=Vancouver))+geom_histogram(bins=15)
#Improve the plot
ggplot(df_hum,aes(x=Vancouver))+
geom_histogram(bins=15,fill="white",color=1)+
ggtitle("Humidity for Vancouver city")+
xlab("Humidity")+
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12))
#Checking the theme options
?theme
#Exercise - Create a improved Boxplot
ggplot(df_hum,aes(x=month,y=Vancouver)) + geom_boxplot()
#Improved Boxplot
ggplot(df_hum,aes(x=month,y=Vancouver)) +
geom_boxplot(color=1,fill=3) +
ylab("Humidity")+
theme(axis.text.y=element_text(size=15),
axis.text.x=element_text(size = 15),
axis.title.x=element_text(size=15,color=2),
axis.title.y=element_text(size=15,color=2))
#Activity D - Improve the visualizations using grammar of graphics
p1 <- ggplot(df_edu,aes(x=Topic))
p2 <- ggplot(df_edu,aes(x=VisitedResources))
#Improved plot
p1 + geom_bar(color=1,fill=3) +
ylab("Count")+
theme(axis.text.y=element_text(size=10),
axis.text.x=element_text(size = 10),
axis.title.x=element_text(size=15,color=4),
axis.title.y=element_text(size=15,color=4))+
ggtitle("Topics in Education data")
p2 + geom_histogram(bins=20,fill="white",color=1)+
ggtitle("Visited Resources for Education data")+
xlab("Visited Resources")+
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=15,color=4),
axis.title.y=element_text(size=15,color=4))
colnames(df_hum)
colnames(df_desc)
glimpse(df_desc)
glimpse(df_hum)
df_desc$Vancouver
nrow(df_desc$Vancouver)
nrow(df_desc)
nrow(df_hum)
glimpse(df_edu)
ggplot(df_edu,aes(x=gender,y=Discussion)) + geom_bar()
ggplot(df_edu,aes(x=gender,y=Discussion)) + geom_bar(stat="identity")
df_desc$Vancouver
df_desc[2000,"Vancouver"]
df_desc[1:10000,"Vancouver"]
df_hum[1:10000,"Vancouver"]
weather <- df_desc[1:10000,"Vancouver"]
hum <- df_desc[1:10000,"Vancouver"]
data.frame(weather,hum)
hum <- df_hum[1:10000,"Vancouver"]
data.frame(weather,hum)
df_new <- data.frame(weather,hum)
colnames(df_new)
ggplot(df_new,aes(x=weather,y=hum)) + geom_bar(stat="identity")
?geom_bar
ggplot(df_new,aes(x=weather,y=hum)) + geom_bar(stat="mean")
?stat
ggplot(df_new,aes(x=weather,y=hum)) + geom_bar(stat="mean")
ggplot(df_new,aes(x=weather,y=hum)) + geom_bar(stat="identity")
gen <- c("M","M","F","F","M")
nbooks <- c(2,2,4,7,8)
books <- data.frame(gen,nbooks)
ggplot(books,aes(x=gen,y=nbooks)) + geom_bar(stat="identity")
str(students)
library(Lock5Data)
install.packages("Lock5Data")
data()
require(Lock5Data)
data()
str(Titanic)
glimpse(HomesForSale)
glimpse(SalaryGender)
glimpse(RetailSales)
ggplot(RetailSales,aes(x=Month,y=Sales)) + geom_bar(stat="identity")
ggplot(RetailSales,aes(x=Month,y=Sales)) + geom_bar(stat="identity")
RetailSales$Month <-factor(RetailSales$Month,
levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
ggplot(RetailSales,aes(x=Month,y=Sales)) + geom_bar(stat="identity")
RetailSales$Month
